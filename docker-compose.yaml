version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    container_name: flowopsai-backend
    env_file:
      - .env
    command: python src/server/main.py
    ports:
      - "${FLOWOPSAI_SERVER_PORT}:5000"
    depends_on:
      - db
    networks:
      - flowopsai-net

  agents:
    build:
      context: ./backend
      dockerfile: Dockerfile.agents
    container_name: flowopsai-agents
    env_file:
      - .env
    command: python src/agents/main.py
    ports:
      - "${FLOWOPSAI_AGENTS_PORT}:8052"
    depends_on:
      - backend
    networks:
      - flowopsai-net

  frontend:
    build: ./frontend
    container_name: flowopsai-frontend
    env_file:
      - .env
    ports:
      - "${FLOWOPSAI_UI_PORT}:3000"
    depends_on:
      - backend
    networks:
      - flowopsai-net

  ml-trainer:
    build: ./ml-trainer
    container_name: flowopsai-ml-trainer
    env_file:
      - .env
    ports:
      - "${TRAINER_PORT}:8090"
    volumes:
      - ./ml-trainer/data:/app/data
      - ./ml-trainer/models:/app/models
    networks:
      - flowopsai-net

  db:
    image: postgres:15
    container_name: flowopsai-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - flowopsai-net

networks:
  flowopsai-net:

volumes:
  postgres_data:
