version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: flowopsai_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    container_name: flowopsai_server
    environment:
      FLOWOPSAI_SERVER_PORT: ${FLOWOPSAI_SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      - postgres
    ports:
      - "${FLOWOPSAI_SERVER_PORT}:${FLOWOPSAI_SERVER_PORT}"

  backend-agents:
    build:
      context: ./backend
      dockerfile: Dockerfile.agents
    container_name: flowopsai_agents
    environment:
      FLOWOPSAI_AGENTS_PORT: ${FLOWOPSAI_AGENTS_PORT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      - backend-server
    ports:
      - "${FLOWOPSAI_AGENTS_PORT}:${FLOWOPSAI_AGENTS_PORT}"

  ml-trainer:
    build:
      context: ./ml-trainer
      dockerfile: Dockerfile.trainer
    container_name: flowopsai_trainer
    environment:
      TRAINER_PORT: ${TRAINER_PORT}
      LOG_LEVEL: ${LOG_LEVEL}
    volumes:
      - ./ml-trainer/data:/app/data
      - ./ml-trainer/models:/app/models
    ports:
      - "${TRAINER_PORT}:${TRAINER_PORT}"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: flowopsai_frontend
    environment:
      FLOWOPSAI_UI_PORT: ${FLOWOPSAI_UI_PORT}
    ports:
      - "${FLOWOPSAI_UI_PORT}:3737"
    depends_on:
      - backend-server

volumes:
  postgres_data:
