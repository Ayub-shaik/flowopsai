server {
  listen 80;

  # Serve the built SPA
  root /usr/share/nginx/html;
  index index.html;

  # Re-resolve Docker service names continuously
  resolver 127.0.0.11 ipv6=off valid=10s;

  # Backend/n8n host/port as variables
  set $backend_host backend-server;
  set $backend_port 8181;
  set $n8n_host n8n;
  set $n8n_port 5678;

  # --- n8n under /n8n (make this block win and strip the prefix) ---
  location ^~ /n8n/ {
    # strip /n8n prefix so upstream sees /rest, /assets, /static, etc.
    rewrite ^/n8n/?(.*)$ /$1 break;

    proxy_pass         http://$n8n_host:$n8n_port;
    proxy_http_version 1.1;

    # headers n8n expects
    proxy_set_header Host                $host;
    proxy_set_header X-Forwarded-Host    $host;
    proxy_set_header X-Forwarded-Proto   $scheme;
    proxy_set_header X-Forwarded-For     $remote_addr;
    proxy_set_header X-Forwarded-Prefix  /n8n;
    proxy_set_header X-Forwarded-Port  $server_port;
    proxy_set_header Origin            $scheme://$host;

    # websockets / SSE
    proxy_set_header Upgrade             $http_upgrade;
    proxy_set_header Connection          "upgrade";

    # timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout    60s;
    proxy_read_timeout    86400s;
  }

  # REST → backend
  location /api/ {
    proxy_pass http://$backend_host:$backend_port$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For   $remote_addr;
  }

  # WebSockets → backend
  location /ws/ {
    proxy_pass http://$backend_host:$backend_port$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }

  # App preview/static passthrough (e.g. /apps/3)
  location /apps/ {
    proxy_pass http://$backend_host:$backend_port$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
  }

  # SPA fallback (keep last so ^~ /n8n/ wins)
  location / {
    try_files $uri $uri/ /index.html;
  }
}
